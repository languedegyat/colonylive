#!/usr/bin/python2

import os
import time
import sys
import getpass
import numpy as np
import subprocess as sp

from clive.core.conf import Configure

cfg = Configure()


def main():
    set_package()
    set_config()
    set_database()
    set_vuescan()
    set_layout()


# Install packages
#==================================================

def set_package():
    os.system('clear')
    print "Install packages"
    print "========================="
    print 
    print "updating package info..."
    sp.call('sudo apt-get -qq update',shell=True)
    items = [
        'r-base',
        'mysql-server',
        'ntpdate',
        'xautomation',
        'wmctrl',
        'python-mysqldb',
        'python-numpy',
        'python-scipy',
        'python-opencv',
        'python-matplotlib',
        'python-sqlalchemy',
        'python-rpy2',
        'python-webpy'
        ]
    for item in items:
        print "install %s" % item
        cmd = 'sudo apt-get -qq -y install %s' % item
        sp.call(cmd,shell=True)

    print "\nDONE"
    raw_input("Press Enter...")



# config file
#==================================================

try:
    cfg.load()
    step = int(cfg[('setup','step')])
except:
    cfg.set_default()
    cfg.update()


def set_value(msg, key):
    try: 
        default = cfg[key]
    except:
        default = ''

    while True:
        ans = raw_input("%s [%s]: " % (msg, default))
        if ans == "":
            if default != '':
                value = default
                break
        else:
            value = ans
            break
    cfg[key] = value
    cfg.update()


def set_config():
    os.system('clear')
    print "Configure setting"
    print "========================="
    print "Item [Current value]: "
    print 
    print "Adiminstrator"
    set_value('- Name', ('admin','name'))
    set_value('- email', ('admin','email'))

    print "\nConnected scanner IDs -- e.g.) 1,2,3"
    set_value('- IDs', ('scan','scanner_ids'))

    print "\nDONE"
    raw_input("Press Enter...")



# Database setting
#==================================================


def set_database():
    from clive.db.database import DB
    from clive.db.schema import make_all_tables
    from clive.db.handler import ScannerHandler
    scanner_handler = ScannerHandler()

    os.system('clear')
    print "Database Setting"
    print "========================="
    print 
    db = DB()
    try:
        db.session.execute("show tables")
    except:
        try:
            create_user_and_db()
        except:
            print "Cannot connect to MySQL database"
        db.session.execute("show tables")
    
    make_all_tables()
    
    # create sid
    sids = map(int, cfg[('scan','scanner_ids')].split(","))
    for sid in sids:
        try:
            scanner_handler.load(sid)
        except:
            scanner_handler.create(sid)
    
    print "\nDONE"
    raw_input("Press Enter...")


def create_user_and_db():
    host = cfg[('db','host')]
    port = cfg[('db','port')]
    dbname = cfg[('db','db')]
    user = cfg[('db','user')]
    passwd = cfg[('db','pass')]
    cmd = "mysql -h %s -P %s -u root -p mysql -e \"GRANT ALL ON *.* TO %s@'localhost' IDENTIFIED BY '%s'; FLUSH PRIVILEGES;\"" % (host, port, user, passwd)
    print "Enter password of MySQL root (not system root!)"
    sp.call(cmd,shell=True)
    
    cmd = "mysql -h %s -P %s -u %s -p%s -e \"CREATE DATABASE %s\"" % (host, port, user, passwd, dbname)
    sp.call(cmd,shell=True)



# VueScan setting
#==================================================

def set_vuescan():
    from clive.setup.auto_vuescan import gui_setup
    from clive.setup.conf_vuescan import make_conf

    os.system('clear')
    print "VueScan Setting"
    print "========================="
    print 
    
    if cfg[('vuescan','pos_input_tab')] != "":
        while True:
            ans = raw_input("Re-setup? yes or no:")
            if ans in ["yes", 'y']:
                break
            if ans in ["no", 'n']:
                return

    gui_setup()
    make_conf()
    
    print "\nDONE"
    raw_input("Press Enter...")



# Clip layout
#==================================================

def set_layout():
    from clive.setup.clip_layout import layout_setup
    from clive.scan.gui_scan import gui_scan
    from clive.scan.prep import prep_gui

    os.system('clear')
    print "Scan layout Setting"
    print "========================="
    print
    
    print "Which scanner you will use for setup?"
    sids = cfg[('scan','scanner_ids')]
    print "Available scanner IDs: %s" % sids
    while True:
        ans = raw_input("scanner ID:")
        if ans in sids:
            sid = int(ans)
            break
    
    print "Set all test plates on the scanner ID %d, then press enter" % sid
    raw_input("Press enter:")
    
    print "Start scanning... Don't touch mouse and keyboard during the scanning"
    raw_input("Press enter:")
    
    prep_gui()

    gui_scan(sid, "layout_set.tif")
    
    print "starting Inkscape..."
    print "Draw red box on the test plates, then save as png file"
    raw_input("Press enter:")

    cmd = "inkscape layout_set.tif"
    sp.call(cmd,shell=True)
    
    layout_setup("layout_set.png")

    print "\nDONE"
    raw_input("Press Enter...")


if __name__ == "__main__":
    main()

