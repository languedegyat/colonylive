#!/usr/bin/python

import os
import sys
import getpass
import numpy as np
import subprocess as sp

from clive.core.conf import Configure

cfg = Configure()


def main():
    #set_config()
    set_database()
    #set_package()


# config file
#==================================================

try:
    cfg.load()
    step = int(cfg[('setup','step')])
except:
    cfg.set_default()
    cfg.update()


def set_value(msg, key):
    try: 
        default = cfg[key]
    except:
        default = ''

    while True:
        ans = raw_input("%s [%s]: " % (msg, default))
        if ans == "":
            if default != '':
                value = default
                break
        else:
            value = ans
            break
    cfg[key] = value
    cfg.update()


def set_config():
    os.system('clear')
    print "Configure setting"
    print "========================="
    print "Item [Current value]: "
    print 
    print "Adiminstrator"
    set_value('- Name', ('admin','name'))
    set_value('- email', ('admin','email'))

    print "\nConnected scanner IDs -- e.g.) 1,2,3"
    set_value('- IDs', ('scan','scanner_ids'))

    print "\nMySQL database"
    set_value('- Host', ('db','host'))
    set_value('- Database', ('db','db'))
    set_value('- Port', ('db','port'))
    set_value('- User', ('db','user'))
    set_value('- Password', ('db','pass'))
    print "[OK]"
    raw_input("Press Enter...")



# Database setting
#==================================================

from clive.db.database import DB
from clive.db.schema import make_all_tables
from clive.db.handler import ScannerHandler
scanner_handler = ScannerHandler()

def set_database():
    os.system('clear')
    print "Database Setting"
    print "========================="
    print 
    db = DB()
    try:
        db.session.execute("show tables")
    except:
        print "Cannot connect to MySQL database"
        print "Check MySQL account information"
        quit()
    make_all_tables()
    
    sids = map(int, cfg[('scan','scanner_ids')].split(","))
    for sid in sids:
        try:
            scanner_handler.load(sid)
        except:
            scanner_handler.create(sid)
    print "[OK]"
    raw_input("Press Enter...")


# Install packages
#==================================================

def set_package():
    os.system('clear')
    print "Install packages"
    print "========================="
    print 
    sp.call('sudo apt-get -qq update',shell=True)
    items = [
        'r-base',
        'openssh-server',
        'ntpdate',
        'xautomation',
        'wmctrl',
        'python-mysqldb',
        'python-numpy',
        'python-scipy',
        'python-opencv',
        'python-matplotlib',
        'python-rpy2',
        'python-webpy'
        ]
    cmd = 'sudo apt-get -qq -y install ' + " ".join(items)
    sp.call(cmd,shell=True)
    print "[OK]"
    raw_input("Press Enter...")



# VueScan setting
#==================================================

def set_vuescan():
    try:
        os.system("vuescan")
    except:
        print "Cannot run VueScan"
        quit()



if __name__ == "__main__":
    main()

